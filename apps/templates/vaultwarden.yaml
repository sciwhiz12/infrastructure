apiVersion: argoproj.io/v1alpha1
kind: Application

metadata:
  name: vaultwarden
  namespace: argocd

spec:
  project: applications
  syncPolicy:
    automated:
      prune: true
    syncOptions:
      - CreateNamespace=true
  destination:
    server: {{ .Values.destination.server }}
    namespace: vaultwarden

  sources:
    - repoURL: https://guerzon.github.io/vaultwarden
      targetRevision: 0.22.7
      chart: vaultwarden
      helm:
        valuesObject:
          image:
            tag: 1.30.5-alpine

          signupsAllowed: false # Disallow users from self-registering
          emailChangeAllowed: false # Disallowe users from changing their own email
          showPassHint: false # Disable login password hints
          adminToken:
            existingSecret: vaultwarden-admin-token
            existingSecretKey: ADMIN_TOKEN

          data: # Data volume
            name: vaultwarden-data
            size: 15Gi
            path: /data
            class: longhorn

          database: # Use separate database
            type: mysql
            existingSecret: mariadb-secrets
            existingSecretKey: database-url

          {{ $domain := or .Values.vaultwarden.domainOverride (print (or .Values.vaultwarden.domainName "vault") "." (or .Values.clusterDomain .Values.domain)) }}
          domain: {{ print "https://" $domain }}
          ingress:
            enabled: true
            class: {{ .Values.ingressClassName }}
            # Chart adds the configuration-snippet nginx annotation, which is normally disabled
            # Add the annotations ourselves manually to compensate
            nginxIngressAnnotations: false
            additionalAnnotations:          
              nginx.ingress.kubernetes.io/connection-proxy-header: "keep-alive"
              nginx.ingress.kubernetes.io/enable-cors: "true"
              nginx.ingress.kubernetes.io/limit-connections: "25"
              nginx.ingress.kubernetes.io/limit-rps: "15"
              nginx.ingress.kubernetes.io/proxy-body-size: 1024m
              nginx.ingress.kubernetes.io/proxy-connect-timeout: "10"
              nginx.ingress.kubernetes.io/proxy-send-timeout: "1800"
              nginx.ingress.kubernetes.io/proxy-read-timeout: "1800"
              nginx.ingress.kubernetes.io/ssl-redirect: "true"
              nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
              cert-manager.io/cluster-issuer: "lets-encrypt-production"
            hostname: {{ $domain }}
            tlsSecret: vaultwarden-ingress-tls

    - repoURL: {{ .Values.repository.url }}
      path: apps/extras/vaultwarden
      targetRevision: HEAD
      helm:
        valuesObject:
          domain: {{ .Values.domain }}

    - repoURL: registry-1.docker.io/bitnamicharts
      targetRevision: 18.2.0
      chart: mariadb
      helm:
        valuesObject:
          auth:
            username: vaultwarden
            database: vaultwarden
            existingSecret: mariadb-secrets
